version: '3.4'

networks:
  monitoring:

volumes:
  prometheus_data: {}
  grafana-storage: {}

services:
  grafana:
    image: grafana/grafana-oss
    ports:
      - 3000:3000
    user: '104'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ${BIND_DIR}/monitoring/grafana/:/etc/grafana/provisioning/
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ${BIND_DIR}/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${BIND_DIR}/monitoring/alertmanger/alerts/:/etc/prometheus/alerts/
      - ${BIND_DIR}/monitoring/blackbox/http-target.json:/etc/prometheus/file_sd/http-target.json
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=7d'
    ports:
      - 9090:9090
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.Hostname}}'
    networks:
      - monitoring
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
    networks:
      - monitoring
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    deploy:
      mode: global

  blackbox:
    image: prom/blackbox-exporter
    networks:
      - monitoring
    volumes:
      - ${BIND_DIR}/monitoring/blackbox/blackbox.yml:/config/blackbox.yml:ro
    command:
      - '--config.file=/config/blackbox.yml'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  alertmanager:
    image: quay.io/prometheus/alertmanager
    volumes:
      - ${BIND_DIR}/monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    networks:
      - monitoring
    ports:
      - 9093:9093
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
